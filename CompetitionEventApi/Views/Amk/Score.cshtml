
@{
    ViewData["Title"] = "Score";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="app">
    <div class="contestants">
        <div class="row">
            <div class="col-md-4 col-md-offset-1">
                @*<h1>{{title}}</h1>*@
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <p v-bind:class="{'bg-danger':error, 'bg-success':!error}" style="font-size:22px;font-weight:bold;color:#000000">{{ msg }}</p>
            </div>
        </div>
        <div class="row push-top-20">
            <div class="col-md-4">
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            @*<td>Id</td>*@
                            <td>Natjecanje</td>
                            <td>Rezultat</td>
                            @*<td></td>*@
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-bind:key="index" v-for="(competitionScore,index) in competitionScores">
                            @*<td>{{competitionScore.id}}</td>*@
                            <td>{{competitionScore.competitionName}}</td>
                            <td>{{competitionScore.finalScore}}</td>
                            @*<td>
                                    <button type="button" class="btn btn-default">Spremi</button>
                                </td>*@
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group row">
                    <label for="competitions" class="col-sm-2 col-form-label">Natjecanje</label>
                    <div class="col-sm-10">
                        <select class="form-control" id="competitions" v-model="scoreSaveViewModel.CompetitionId">
                            <option v-for="option in competitions" v-bind:value="option.id">
                                {{ option.title }}
                            </option>
                        </select>
                    </div>
                </div>
                <div class="form-group row">
                    <label for="score" class="col-sm-2 col-form-label">Rezultat</label>
                    <div class="col-sm-10" v-if="mainCompetitionId != 1">
                        <input type="text" v-model="scoreSaveViewModel.Score" class="form-control" id="score">
                    </div>
                    <div class="col-sm-10" v-else>
                        <input type="text" v-model="scoreSaveViewModel.Round1" class="form-control" id="round1">
                        <input type="text" v-model="scoreSaveViewModel.Round2" class="form-control" id="round2">
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-10">
                        <button type="button" class="btn btn-primary" v-on:click.prevent="save">Spremi</button>
                    </div>
                </div>
                <div class="form-group row ">
                    <div class="col-sm-10 push-top-10">
                        <button type="button" class="btn btn-warning" v-on:click.prevent="done">Gotovo!</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var app = new Vue({
        name: 'Score',
        el: '#app',
        data() {
            return {
                selectedMinor: 0,
                title: 'Ocjenjivanje',
                competitionScores: [],
                mainCompetitionId: 0,
                scoreSaveViewModel: {},
                competitions: [],
                msg: '',
                error: false
            }
        },
        created() {

            this.load();
        },
        methods: {
            load: function (e) {
                axios.get(_siteUrl + 'api/scores/' + getUrlVars()["Id"])
                    .then(response => {
                        this.competitionScores = response.data.competitionScores;

                        var mainComeptitionId = response.data.mainCompetitionId
                        this.mainCompetitionId = mainComeptitionId;

                        axios.get(_siteUrl + 'api/competitions')
                            .then(response => {
                                if (mainComeptitionId == 1 || mainComeptitionId == 2) {
                                    this.competitions = response.data.filter(function (e) {
                                        return e.relatedCompetitionId == mainComeptitionId;
                                    })
                                } else {
                                    this.competitions = response.data.filter(function (e) {
                                        return e.id == mainComeptitionId;
                                    })
                                }
                            })
                            .catch(e => {
                                console.log(e)
                            });

                    })
                    .catch(e => {
                        console.log(e)
                    });
            },
            done: function () {

                axios({
                    method: 'put',
                    url: _siteUrl + 'api/scores/' + getUrlVars()["Id"]
                }).then(response => {
                    this.msg = "Gotovo";
                    this.error = false;
                    window.location.href = "/Amk/scoring";
                })
                    .catch(e => {
                        console.log(e)
                    })
            },
            save: function () {

                var saveModel = this.scoreSaveViewModel;
                saveModel.CompetitionApplicationId = getUrlVars()["Id"];

                var chkCompScore = this.competitionScores.filter(function (e) {
                    return e.competitionId == saveModel.CompetitionId;
                })

                var chkMainCompScore = this.competitionScores.filter(function (e) {
                    return (saveModel.CompetitionId == 7 || saveModel.CompetitionId == 8 || saveModel.CompetitionId == 9)
                        && (e.competitionId == 7 || e.competitionId == 8 || e.competitionId == 9); //begginer, pro, extreme
                })

                if (chkMainCompScore.length > 0) {
                    this.msg = "Možeš odabrati samo jednu nad-kategoriju";
                    this.error = true;
                    return;
                } else {
                    this.msg = "";
                    this.error = false;
                }

                if (chkCompScore.length > 0) {
                    this.msg = "Ovo je natjecanje već uneseno";
                    this.error = true;
                    return;
                }
                else {
                    this.msg = "";
                    this.error = false;
                }

                axios({
                    method: 'post',
                    url: _siteUrl + 'api/scores/',
                    data: saveModel
                }).then(response => {
                    this.msg = "Spremljeno";
                    this.error = false;
                    this.load();
                })
                    .catch(e => {
                        console.log(e)
                    })
            }
        }
    })
</script>